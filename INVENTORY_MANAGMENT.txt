/*
--TABLE HOLDS THE NAMES AND IDS OF EACH ISSUE
CREATE TABLE ISSUE_NAME_METADATA
(
issue_id int,
issue_name varchar(200)
);


INSERT INTO  issue_name_metadata VALUES
(1,'TX 1%'),
(2, 'AZPH medicaid rates'),
(3, 'Calcimimetic Overpay');


--THIS TABLE HAS CLAIMS THAT HAVE ISSUES IDENTIFIED WITH THEM
CREATE TABLE INVENTORY_METADATA
(
CLAIM_NO int,
ISSUE_ID numeric
);


INSERT INTO INVENTORY_METADATA VALUES
(100,1),
(101,1),
(102,1),
(103,1),
(104,1),
(105,1),
(106,2),
(107,2),
(108,2),
(109,2),
(110,2),
(115,3),
(117,3),
(118,3),
(120,3),
(122,3);


--NPSP
CREATE TABLE NPSP_TEST
(
CLAIM_NO int,
LAST_NAME varchar(50),
LAST_PAS_NOTE_DATE date,
COUNT_TOUCHES numeric
);


INSERT INTO NPSP_TEST VALUES
(100, 'Johnson', '2021-06-08', 1),
(101, 'Cardinal', '2021-08-08', 0),
(102, 'Fath', '2021-05-08', 0),
(103, 'Abbott', '2021-02-08', 3),
(104, 'Samson', '2021-06-08', 2),
(105, 'Allan', '2020-06-08', 0),
(106, 'Smith', '2021-01-08', 0),
(107, 'Doe', '2021-06-08', 0),
(108, 'Betts', '2021-06-08', 2),
(109, 'Hernandez', '2021-06-08', 1),
(110, 'Ichiro', '2021-06-08', 0),
(111, 'McGuire', '2020-07-08', 0),
(112, 'Sosa', '2020-06-08', 0),
(113, 'Boone', '2020-06-08', 2),
(114, 'Olerud', '2020-06-08', 1),
(115, 'Cattins', '2020-06-08', 0),
(116, 'Ruth', '2021-08-08', 1),
(117, 'Ginzburg', '2021-08-08', 1),
(118, 'Terrell', '2021-06-08', 0),
(119, 'Henson', '2021-03-08', 2),
(120, 'Williams', '2021-05-08', 0),
(121, 'Carrey', '2021-04-08', 1),
(122, 'Mulligan', '2021-02-08', 4),
(123, 'Potter', '2021-02-08', 3),
(124, 'Granger', '2021-01-08', 3),
(125, 'Wisley', '2021-01-08', 2),
(126, 'Mask', '2020-12-08', 2),
(127, 'Davenport', '2021-06-08', 0),
(128, 'Rose', '2021-07-08', 0),
(129, 'DeMattis', '2021-07-08', 1);


SELECT NPSP.CLAIM_NO
	,LAST_NAME
	,LAST_PAS_NOTE_DATE
	,COUNT_TOUCHES
	,CASE WHEN COUNT_TOUCHES >0 THEN 1 ELSE 0 END AS CLAIMS_WITH_TOUCH
	,CASE WHEN COUNT_TOUCHES > 0 AND LAST_PAS_NOTE_DATE < date(now()) - 120 THEN 1 ELSE 0 END AS CLAIMS_WTOUCH_120
	,ISSUE_ID
	,ISSUE_NAME
	,COUNT(*) over(PARTITION BY ISSUE_NAME) AS CLAIM_VOLUME_BY_ISSUE
	,COUNT(*) OVER() AS TOTAL_INVENTORY
	,COUNT(ISSUE_ID) OVER() AS IDENTIFIED_INVENTORY
	,ROUND((CAST((COUNT(ISSUE_ID) OVER()) AS NUMERIC)/ COUNT(*) OVER()) * 100,2) AS PCT_INVENTORY_IDENTIFIED
FROM NPSP_TEST AS NPSP LEFT JOIN INVENTORY_METADATA AS META
	ON NPSP.CLAIM_NO = META.CLAIM_NO
ORDER BY ISSUE_ID ASC
;

CREATE INDEX IDX_CLAIM_NO
ON NPSP_TEST (CLAIM_NO);
*/


--claim list with issue_id specified
SELECT * FROM INVENTORY_METADATA;
--issue key providing issue name and short desciription
SELECT * FROM ISSUE_NAME_METADATA;
--npsp
SELECT * FROM NPSP_TEST;


--NPSP INVENTORY WITH ISSUES JOINED--SHOWS NPSP BUT INCLUDES TWO ADDITIONAL COLUMNS, ONE WITH THE ISSUE ID, AND ONE 
--WITH THE ISSUE NAME.
SELECT NPSP.CLAIM_NO
	,META.ISSUE_ID
	,ISSUE_NAME
	,LAST_NAME
	,LAST_PAS_NOTE_DATE
	,COUNT_TOUCHES
FROM NPSP_TEST AS NPSP LEFT JOIN INVENTORY_METADATA AS META
	ON NPSP.CLAIM_NO = META.CLAIM_NO
	LEFT JOIN ISSUE_NAME_METADATA AS ISSUE ON ISSUE.ISSUE_ID = META.ISSUE_ID
ORDER BY CLAIM_NO;


--ISSUE SUMMARY-LISTS EACH ISSUE, THEIR TOTAL CLAIM VOLUME, HOW MANY CLAIMS HAVE BEEN TOUCHED, 
--AND HOW MANY HAVE BEEN TOUCHED IN THE LAST 120 DAYS.
WITH
	TOUCHES (CLAIMS_WITH_TOUCH, CLAIMS_WTOUCH_120, CLAIM_NO) AS
	(
		SELECT 
			CASE WHEN COUNT_TOUCHES >0 THEN 1 ELSE 0 END AS CLAIMS_WITH_TOUCH 
			,CASE WHEN COUNT_TOUCHES > 0 AND LAST_PAS_NOTE_DATE > date(now()) - 120 THEN 1 ELSE 0 END AS CLAIMS_WTOUCH_120
			,CLAIM_NO
		FROM NPSP_TEST 
	)
SELECT 
	ISSUE.ISSUE_ID
	,CASE WHEN ISSUE_NAME IS NULL THEN 'Unidentified Inventory' ELSE ISSUE_NAME END
	--,short_description
	,count(NPSP.CLAIM_NO) AS CLAIM_VOLUME
	,sum(CLAIMS_WITH_TOUCH) AS CLAIMS_WITH_TOUCH
	,round(cast(sum(CLAIMS_WITH_TOUCH) AS numeric) / count(NPSP.CLAIM_NO) * 100,2) AS PCT_CLAIMS_WITH_TOUCH
	,sum(CLAIMS_WTOUCH_120) AS CLAIMS_WTOUCH_120
	,round(cast(sum(CLAIMS_WTOUCH_120) AS numeric) / count(NPSP.CLAIM_NO) * 100,2) AS PCT_CLAIMS_WTOUCH_120
FROM NPSP_TEST AS NPSP LEFT JOIN INVENTORY_METADATA AS META
	ON NPSP.CLAIM_NO = META.CLAIM_NO
	JOIN TOUCHES ON NPSP.CLAIM_NO = TOUCHES.CLAIM_NO
	LEFT JOIN ISSUE_NAME_METADATA AS ISSUE ON ISSUE.ISSUE_ID = META.ISSUE_ID
GROUP BY ISSUE.ISSUE_ID, ISSUE_NAME, short_description
ORDER BY ISSUE.ISSUE_ID ASC
;


--TOTAL INVENTORY SUMMARY--SHOWS HOW MUCH OF THE INVENTORY IS DEFINED VS ENTIRE COLLECTIONS INVENTORY
SELECT
	count(META.CLAIM_NO) AS IDENTIFIED_INVENTORY
	,count(NPSP.CLAIM_NO) AS TOTAL_INVENTORY
	,round(cast(count(META.CLAIM_NO) as numeric) / count(NPSP.CLAIM_NO) * 100,2) AS PCT_INVENTORY_IDENTIFIED
FROM NPSP_TEST AS NPSP LEFT JOIN INVENTORY_METADATA AS META
	ON NPSP.CLAIM_NO = META.CLAIM_NO;


--SELECTS ALL CLAIMS IMPACTED BY SPECIFIED ISSUE
SELECT
	META.ISSUE_ID
	,issue_name
	--,SHORT_DESCRIPTION
	,NPSP.CLAIM_NO
	,ISSUE_NAME
	,LAST_NAME
	,LAST_PAS_NOTE_DATE
	,COUNT_TOUCHES
FROM NPSP_TEST AS NPSP INNER JOIN INVENTORY_METADATA AS META
	ON NPSP.CLAIM_NO = META.CLAIM_NO
	LEFT JOIN ISSUE_NAME_METADATA AS ISSUE ON ISSUE.ISSUE_ID = META.ISSUE_ID
WHERE ISSUE_NAME ILIKE '%tx%';


--Alternate NPSP joined view
SELECT NPSP.CLAIM_NO
	,META.ISSUE_ID
	,META.ISSUE_NAME
	,META.SHORT_DESCRIPTION
	,LAST_NAME
	,LAST_PAS_NOTE_DATE
	,COUNT_TOUCHES
	,CASE WHEN COUNT_TOUCHES > 0 THEN 1 ELSE 0 END AS TOUCHED_CLAIM_COUNT
FROM NPSP_TEST AS NPSP LEFT JOIN INVENTORY_METADATA AS ISSUE
	ON NPSP.CLAIM_NO = ISSUE.CLAIM_NO
	LEFT JOIN ISSUE_NAME_METADATA AS META
	ON ISSUE.ISSUE_ID = META.ISSUE_ID
ORDER BY CLAIM_NO;

